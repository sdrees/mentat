matrix:
  fast_finish: true
  allow_failures:
    - rust: nightly
  include:
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: 1.25.0  # Must align with `build/version.rs`.
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: stable
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: beta
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: nightly
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: rust
      dist: trusty
      rust: stable

      env:
        # Get revision number from https://dl.google.com/android/repository/repository2-1.xml
        # Look for the string 'sdk-tools-linux-'.
        - ANDROID_SDK_VERSION=4333796

      before_install:
        - >
          PKG_OS="$TRAVIS_OS_NAME";
          export ANDROID_HOME="${HOME}/android-sdk";
          export PATH=$PATH:"${ANDROID_HOME}/tools/bin";
          mkdir $ANDROID_HOME
      install:
        # SDK Tools.
        - >
          curl -o sdk.zip "https://dl.google.com/android/repository/sdk-tools-${PKG_OS}-${ANDROID_SDK_VERSION}.zip" &&
          unzip -q sdk.zip -d $ANDROID_HOME;
        # Android SDK and NDK
        # Unfortunately we need to get rid of all output, otherwise it can easily fill up the 4 MB log limit
        - yes | sdkmanager --licenses > /dev/null
        - sdkmanager 'build-tools;27.0.0' 'platforms;android-27' 'ndk-bundle' > /dev/null

        # Rust targets
        - rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android

      script:
        # Create standalone NDKs
        - >
          ./create-ndk-standalone.sh &&
          mkdir ./.cargo &&
          cp cargo-config.toml ./.cargo/config || travis_terminate 1
        - >
          cargo build -p mentat_ffi --target aarch64-linux-android --release &&
          cargo build -p mentat_ffi --target armv7-linux-androideabi --release &&
          cargo build -p mentat_ffi --target i686-linux-android --release || travis_terminate 1
        - >
          export TERM=dumb;
          cd sdks/android/Mentat &&
          ./gradlew assembleDebug &&
          cd ../../..
